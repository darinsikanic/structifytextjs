{
    "tables": [
        {
            "id": "\\[TABLE (\\d{1,2})\\]",
            "flows": [
                {
                    "id": "\\[FLOW_ID(\\d+)\\]",
                    "timestamp": "Timestamp\\s+=\\s+(.+)",
                    "ofp_version": "ofp_version\\s+=\\s+(\\d+)",
                    "controller_group": "ControllerGroup\\s+=\\s+(\\d+)",
                    "controller_id": "ControllerId\\s+=\\s+(\\d+)",
                    "priority": "Priority\\s+=\\s+(\\d+)",
                    "idle_timeout": "Idle_timeout\\s+=\\s+(\\d+)",
                    "hard_timeout": "Hard_timeout\\s+=\\s+(\\d+)",
                    "packet_count": "Packet_count\\s+=\\s+(\\d+)",
                    "byte_count": "Byte_count\\s+=\\s+(\\d+)",
                    "cookie": "Cookie\\s+=\\s+([0-9a-fA-F]+)",
                    "send_flow_rem": "Send_flow_rem\\s+=\\s+(true|false)",
                    "match_fields": {
                        "block_start": "(\\[MATCHFIELDS\\])",
                        "block_end": "(\\[INSTRUCTIONS\\])",
                        "ether_type": "OFPXMT_OFB_ETH_TYPE\\s+=\\s+(.+)",
                        "in_port": "OFPXMT_OFB_IN_PORT\\s+=\\s+(.+)",
                        "mpls_label": "OFPXMT_OFB_MPLS_LABEL\\s+=\\s+(.+)"
                    },
                    "instructions": {
                        "block_start": "(\\[INSTRUCTIONS\\])",
                        "go_to_table": {
                            "block_start": "(\\[OFPIT_GOTO_TABLE\\])",
                            "table": "table\\s+=\\s+(\\d+)"
                        },
                        "apply_actions": {
                            "block_start": "(\\[OFPIT_APPLY_ACTIONS\\])",
                            "output": {
                                "port": "port\\s+=\\s+(.+)",
                                "mlen": "mlen\\s+=\\s+(.+)"
                            },
                            "pop_mpls": {
                                "block_start": "(\\[OFPAT_POP_MPLS\\])",
                                "eth": "eth\\s+=\\s+(.+)"
                            },
                            "group": {
                                "block_start": "(\\[OFPAT_GROUP\\])",
                                "id": "id\\s+=\\s+(\\d+)"
                            }
                        }
                    }
                }
            ]
        }
    ]
}